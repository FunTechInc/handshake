{"version":3,"file":"handshake.min.js","sources":["../src/handshake.ts"],"sourcesContent":["type Emit = (key: string, value: any) => void;\ntype On = (key: string, callback: (value: any) => void) => void;\ntype ReadyEvent = {\n   emit: Emit;\n   on: On;\n   revert: () => void;\n};\ntype MessageData = { type: string; key?: string; value?: any };\ntype MESSAGE_TYPES = \"handshake\" | \"handshake-reply\" | \"event\";\n\nconst MAX_HANDSHAKE_REQUESTS: number = 5;\nconst HANDSHAKE_REQUESTS_INTERVAL: number = 500;\nconst ALLOWED_MESSAGE_TYPES: MESSAGE_TYPES[] = [\n   \"handshake\",\n   \"handshake-reply\",\n   \"event\",\n];\n\nfunction sanitize(message: MessageEvent, allowedOrigin?: string): boolean {\n   if (allowedOrigin == null) return false;\n   if (message.origin !== allowedOrigin) return false;\n   if (!message.data || typeof message.data !== \"object\") return false;\n   const data = message.data as { type?: MESSAGE_TYPES };\n   if (!data.type) return false;\n   if (!ALLOWED_MESSAGE_TYPES.includes(data.type)) return false;\n   return true;\n}\n\nabstract class BaseChannel {\n   protected _Promise: Promise<this>;\n   protected _PromiseResolver!: (value: this | PromiseLike<this>) => void;\n   protected _PromiseRejecter!: (reason?: any) => void;\n\n   protected _handlers: { [key: string]: Array<(value: any) => void> };\n   protected _targetWindow?: Window | null;\n   protected _targetOrigin?: string;\n\n   constructor(opt: { targetWindow?: Window; targetOrigin?: string } = {}) {\n      this._Promise = new Promise<this>((resolve, reject) => {\n         this._PromiseResolver = resolve;\n         this._PromiseRejecter = reject;\n      });\n      this._handlers = {};\n      this._targetWindow = opt.targetWindow;\n      this._targetOrigin = opt.targetOrigin;\n      window.addEventListener(\"message\", this._onMessage.bind(this));\n   }\n\n   protected _sendMessage(msg: any): void {\n      if (this._targetOrigin == null) return;\n      this._targetWindow?.postMessage(msg, this._targetOrigin);\n   }\n\n   protected _trigger(key: string, value: any): void {\n      if (this._handlers[key]) this._handlers[key].forEach((cb) => cb(value));\n   }\n\n   public ready(callback: (event: ReadyEvent) => void): void {\n      this._Promise.then(callback);\n   }\n\n   public emit: Emit = (key, value) =>\n      this._sendMessage({ type: \"event\", key, value });\n\n   public on: On = (key, callback) => {\n      if (!this._handlers[key]) this._handlers[key] = [];\n      this._handlers[key].push(callback);\n   };\n\n   public revert() {\n      window.removeEventListener(\"message\", this._onMessage.bind(this));\n   }\n\n   protected abstract _onMessage(event: MessageEvent): void;\n   protected _handleOnMessage(\n      e: MessageEvent,\n      type: MESSAGE_TYPES,\n      callback: () => void\n   ) {\n      if (!sanitize(e, this._targetOrigin)) return;\n      const msg = e.data as MessageData;\n      if (msg.type === type) {\n         callback();\n         this._PromiseResolver(this);\n      } else if (msg.type === \"event\" && msg.key != undefined) {\n         this._trigger(msg.key, msg.value);\n      }\n   }\n}\n\nexport class Parent extends BaseChannel {\n   public container: HTMLElement;\n   public iframe: HTMLIFrameElement;\n   protected _handshakeInterval?: number;\n\n   constructor(opt: { container: string; url: string }) {\n      super();\n\n      const container = document.getElementById(opt.container);\n      if (!container) throw new Error(\"Container element not found\");\n      this.container = container;\n      this.iframe = document.createElement(\"iframe\");\n      this.iframe.style.width = \"100%\";\n      this.iframe.style.height = \"100%\";\n\n      this.container.appendChild(this.iframe);\n\n      this._targetOrigin = new URL(opt.url, window.location.href).origin;\n\n      this.iframe.addEventListener(\"load\", () => {\n         this._targetWindow = this.iframe.contentWindow;\n         this._startHandshake();\n      });\n      this.iframe.src = opt.url;\n   }\n\n   public ready(\n      callback: (\n         event: {\n            iframe: HTMLIFrameElement;\n            container: HTMLElement;\n         } & ReadyEvent\n      ) => void\n   ): void {\n      super.ready(callback as any);\n   }\n\n   public revert() {\n      super.revert();\n      this.iframe.parentNode?.removeChild(this.iframe);\n   }\n\n   private _startHandshake(): void {\n      let attempt = 0;\n      const handshakeInterval = window.setInterval(() => {\n         attempt++;\n         if (attempt > MAX_HANDSHAKE_REQUESTS) {\n            clearInterval(handshakeInterval);\n            this._PromiseRejecter(new Error(\"Handshake failed\"));\n         } else {\n            this._sendMessage({ type: \"handshake\" });\n         }\n      }, HANDSHAKE_REQUESTS_INTERVAL);\n      this._handshakeInterval = handshakeInterval;\n   }\n\n   protected _onMessage(e: MessageEvent): void {\n      this._handleOnMessage(e, \"handshake-reply\", () =>\n         clearInterval(this._handshakeInterval)\n      );\n   }\n}\n\nexport class Child extends BaseChannel {\n   constructor() {\n      super({\n         targetWindow: window.parent,\n         targetOrigin: window.parent.location.origin,\n      });\n   }\n\n   protected _onMessage(e: MessageEvent): void {\n      this._handleOnMessage(e, \"handshake\", () =>\n         this._sendMessage({ type: \"handshake-reply\" })\n      );\n   }\n}\n"],"names":["ALLOWED_MESSAGE_TYPES","sanitize","message","allowedOrigin","data","BaseChannel","opt","__publicField","key","value","callback","resolve","reject","msg","_a","cb","e","type","Parent","container","attempt","handshakeInterval","Child"],"mappings":"qYAYA,MAAMA,EAAyC,CAC5C,YACA,kBACA,OACH,EAEA,SAASC,EAASC,EAAuBC,EAAiC,CAGvE,GAFIA,GAAiB,MACjBD,EAAQ,SAAWC,GACnB,CAACD,EAAQ,MAAQ,OAAOA,EAAQ,MAAS,SAAiB,MAAA,GAC9D,MAAME,EAAOF,EAAQ,KAErB,MADI,GAACE,EAAK,MACN,CAACJ,EAAsB,SAASI,EAAK,IAAI,EAEhD,CAEA,MAAeC,CAAY,CASxB,YAAYC,EAAwD,GAAI,CAR9DC,EAAA,iBACAA,EAAA,yBACAA,EAAA,yBAEAA,EAAA,kBACAA,EAAA,sBACAA,EAAA,sBA0BHA,EAAA,YAAa,CAACC,EAAKC,IACvB,KAAK,aAAa,CAAE,KAAM,QAAS,IAAAD,EAAK,MAAAC,EAAO,GAE3CF,EAAA,UAAS,CAACC,EAAKE,IAAa,CAC3B,KAAK,UAAUF,CAAG,IAAQ,KAAA,UAAUA,CAAG,EAAI,CAAC,GACjD,KAAK,UAAUA,CAAG,EAAE,KAAKE,CAAQ,CACpC,GA7BG,KAAK,SAAW,IAAI,QAAc,CAACC,EAASC,IAAW,CACpD,KAAK,iBAAmBD,EACxB,KAAK,iBAAmBC,CAAA,CAC1B,EACD,KAAK,UAAY,CAAC,EAClB,KAAK,cAAgBN,EAAI,aACzB,KAAK,cAAgBA,EAAI,aACzB,OAAO,iBAAiB,UAAW,KAAK,WAAW,KAAK,IAAI,CAAC,CAAA,CAGtD,aAAaO,EAAgB,OAChC,KAAK,eAAiB,QAC1BC,EAAA,KAAK,gBAAL,MAAAA,EAAoB,YAAYD,EAAK,KAAK,eAAa,CAGhD,SAASL,EAAaC,EAAkB,CAC3C,KAAK,UAAUD,CAAG,GAAQ,KAAA,UAAUA,CAAG,EAAE,QAASO,GAAOA,EAAGN,CAAK,CAAC,CAAA,CAGlE,MAAMC,EAA6C,CAClD,KAAA,SAAS,KAAKA,CAAQ,CAAA,CAWvB,QAAS,CACb,OAAO,oBAAoB,UAAW,KAAK,WAAW,KAAK,IAAI,CAAC,CAAA,CAIzD,iBACPM,EACAC,EACAP,EACD,CACC,GAAI,CAACT,EAASe,EAAG,KAAK,aAAa,EAAG,OACtC,MAAMH,EAAMG,EAAE,KACVH,EAAI,OAASI,GACLP,EAAA,EACT,KAAK,iBAAiB,IAAI,GAClBG,EAAI,OAAS,SAAWA,EAAI,KAAO,MAC3C,KAAK,SAASA,EAAI,IAAKA,EAAI,KAAK,CACnC,CAEN,CAEO,MAAMK,UAAeb,CAAY,CAKrC,YAAYC,EAAyC,CAC5C,MAAA,EALFC,EAAA,kBACAA,EAAA,eACGA,EAAA,2BAKP,MAAMY,EAAY,SAAS,eAAeb,EAAI,SAAS,EACvD,GAAI,CAACa,EAAiB,MAAA,IAAI,MAAM,6BAA6B,EAC7D,KAAK,UAAYA,EACZ,KAAA,OAAS,SAAS,cAAc,QAAQ,EACxC,KAAA,OAAO,MAAM,MAAQ,OACrB,KAAA,OAAO,MAAM,OAAS,OAEtB,KAAA,UAAU,YAAY,KAAK,MAAM,EAEjC,KAAA,cAAgB,IAAI,IAAIb,EAAI,IAAK,OAAO,SAAS,IAAI,EAAE,OAEvD,KAAA,OAAO,iBAAiB,OAAQ,IAAM,CACnC,KAAA,cAAgB,KAAK,OAAO,cACjC,KAAK,gBAAgB,CAAA,CACvB,EACI,KAAA,OAAO,IAAMA,EAAI,GAAA,CAGlB,MACJI,EAMK,CACL,MAAM,MAAMA,CAAe,CAAA,CAGvB,QAAS,OACb,MAAM,OAAO,GACbI,EAAA,KAAK,OAAO,aAAZ,MAAAA,EAAwB,YAAY,KAAK,OAAM,CAG1C,iBAAwB,CAC7B,IAAIM,EAAU,EACR,MAAAC,EAAoB,OAAO,YAAY,IAAM,CAChDD,IACIA,EAAU,GACX,cAAcC,CAAiB,EAC/B,KAAK,iBAAiB,IAAI,MAAM,kBAAkB,CAAC,GAEnD,KAAK,aAAa,CAAE,KAAM,WAAA,CAAa,GAE1C,GAA2B,EAC9B,KAAK,mBAAqBA,CAAA,CAGnB,WAAW,EAAuB,CACpC,KAAA,iBAAiB,EAAG,kBAAmB,IACzC,cAAc,KAAK,kBAAkB,CACxC,CAAA,CAEN,CAEO,MAAMC,UAAcjB,CAAY,CACpC,aAAc,CACL,MAAA,CACH,aAAc,OAAO,OACrB,aAAc,OAAO,OAAO,SAAS,MAAA,CACvC,CAAA,CAGM,WAAWW,EAAuB,CACpC,KAAA,iBAAiBA,EAAG,YAAa,IACnC,KAAK,aAAa,CAAE,KAAM,iBAAmB,CAAA,CAChD,CAAA,CAEN"}